name: Docker

on:
  push:
    branches:
      - master

    tags:
      - v*

  pull_request:

jobs:
  
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Up environment
        run: |
          echo "PHP_FPM_PASSWORD=123456" > .env
          docker compose up --build -d

      - name: Wait environment
        run: |
          sleep 10

      - name: Logs environment
        run: |
          docker compose ps
          docker compose logs

      - name: Test Normal
        run: |
          CONTENT=$(curl -s "http://127.0.0.1:83/");
          echo "CHAMADA HTTP NORMAL: ${CONTENT}";
          if [ "${CONTENT}" != "php" ]; then
            echo "Chamada HTTP NORMAL retornou errado: ${CONTENT}"
            exit 1;
          fi

      - name: Test Rewrite
        run: |
          CONTENT_REWRITE=$(curl -s "http://127.0.0.1:81/");
          echo "CHAMADA HTTP REWRITE: ${CONTENT_REWRITE}";
          if [ "${CONTENT_REWRITE}" != "rewrite" ]; then
            echo "Chamada HTTP REWRITE retornou errado: ${CONTENT_REWRITE}"
            exit 1;
          fi

      - name: Test Tryfiles
        run: |  
          CONTENT_TRYFILES=$(curl -s "http://127.0.0.1:82/");
          echo "CHAMADA HTTP TRYFILES: ${CONTENT_TRYFILES}";

          if [ "${CONTENT_TRYFILES}" != "tryfiles" ]; then
            echo "Chamada HTTP TRYFILES retornou errado: ${CONTENT_TRYFILES}"
            exit 1;
          fi

      - name: Test Extras
        run: |  
          CONTENT=$(curl -s -o /dev/null -I -w "%{content_type}" http://127.0.0.1:84/zzz);
          echo "CHAMADA HTTP: ${CONTENT}";

          if [ "${CONTENT}" != "image/gif" ]; then
            echo "Chamada HTTP retornou errado: ${CONTENT}"
            exit 1;
          fi

      - name: Test Extras var
        run: |  
          CONTENT=$(curl -s -o /dev/null -I -w "%{content_type}" http://127.0.0.1:89/zzz);
          echo "CHAMADA HTTP: ${CONTENT}";

          if [ "${CONTENT}" != "image/gif" ]; then
            echo "Chamada HTTP retornou errado: ${CONTENT}"
            exit 1;
          fi

      - name: Test Filebeat
        run: |
          CONTENT=$(curl -s "http://127.0.0.1:85/");
          echo "CHAMADA HTTP TRYFILES: ${CONTENT}";

          if [ "${CONTENT}" != "tryfiles" ]; then
            echo "Chamada HTTP TRYFILES retornou errado: ${CONTENT}"
            exit 1;
          fi

      - name: Down environment
        run: |
          docker compose down --remove-orphans

      - name: Setup SSL
        run: |
          echo "PHP_FPM_PASSWORD=123456" > .env
          docker compose -f docker-compose.ssl.yml up --build -d
          sleep 15
          docker compose -f docker-compose.ssl.yml ps
          docker compose -f docker-compose.ssl.yml logs

      - name: Test SSL
        run: |
          CONTENT=$(curl -s "https://127.0.0.1:444/");
          echo "CHAMADA HTTP: ${CONTENT}";

          if [ "${CONTENT}" != "php" ]; then
            echo "Chamada HTTP retornou errado: ${CONTENT}"
            exit 1;
          fi

  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          build-args: |
            PHP_FPM_PASSWORD=${{ secrets.FPM_PASSWORD }}
          push: true
          tags: |
            likesistemas/nginx:latest
            ghcr.io/likesistemas/nginx:latest

      - name: Build and push with filebeat
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.filebeat
          push: true
          tags: |
            likesistemas/nginx:filebeat
            ghcr.io/likesistemas/nginx:filebeat